{"ast":null,"code":"import Airtable from 'airtable';\nAirtable.configure({\n  endpointUrl: 'https://api.airtable.com',\n  apiKey: 'keyBj1QK7piMXmdoF'\n});\nconst base = Airtable.base('appuxyROrm9vUAbRD');\n\nasync function getResults() {\n  let results = [];\n  await base('Matches').select({\n    // Selecting the first 3 records in Grid view:\n    maxRecords: 5,\n    view: 'Grid view'\n  }).firstPage((err, records) => {\n    if (err) {\n      console.error(err);\n      return;\n    } // console.log(records);\n    // results.push(records);\n\n\n    results = records;\n  });\n  debugger;\n  return results;\n}\n\nexport { getResults };","map":{"version":3,"sources":["/Users/dean/github/keyforgeCafe/lib/db.js"],"names":["Airtable","configure","endpointUrl","apiKey","base","getResults","results","select","maxRecords","view","firstPage","err","records","console","error"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEAA,QAAQ,CAACC,SAAT,CAAmB;AACjBC,EAAAA,WAAW,EAAE,0BADI;AAEjBC,EAAAA,MAAM,EAAE;AAFS,CAAnB;AAKA,MAAMC,IAAI,GAAGJ,QAAQ,CAACI,IAAT,CAAc,mBAAd,CAAb;;AAEA,eAAeC,UAAf,GAA4B;AAC1B,MAAIC,OAAO,GAAG,EAAd;AAEA,QAAMF,IAAI,CAAC,SAAD,CAAJ,CACHG,MADG,CACI;AACN;AACAC,IAAAA,UAAU,EAAE,CAFN;AAGNC,IAAAA,IAAI,EAAE;AAHA,GADJ,EAMHC,SANG,CAMO,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAC3B,QAAID,GAAJ,EAAS;AACPE,MAAAA,OAAO,CAACC,KAAR,CAAcH,GAAd;AACA;AACD,KAJ0B,CAK3B;AACA;;;AACAL,IAAAA,OAAO,GAAGM,OAAV;AACD,GAdG,CAAN;AAgBA;AACA,SAAON,OAAP;AACD;;AAED,SAASD,UAAT","sourcesContent":["import Airtable from 'airtable';\n\nAirtable.configure({\n  endpointUrl: 'https://api.airtable.com',\n  apiKey: 'keyBj1QK7piMXmdoF'\n});\n\nconst base = Airtable.base('appuxyROrm9vUAbRD');\n\nasync function getResults() {\n  let results = [];\n\n  await base('Matches')\n    .select({\n      // Selecting the first 3 records in Grid view:\n      maxRecords: 5,\n      view: 'Grid view'\n    })\n    .firstPage((err, records) => {\n      if (err) {\n        console.error(err);\n        return;\n      }\n      // console.log(records);\n      // results.push(records);\n      results = records;\n    });\n\n  debugger;\n  return results;\n}\n\nexport { getResults };\n"]},"metadata":{},"sourceType":"module"}