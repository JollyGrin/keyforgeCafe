{"ast":null,"code":"var _jsxFileName = \"/Users/dean/github/keyforgeCafe/pages/meta.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport TheHead from '../components/TheHead';\nimport DeckLists from '../components/DeckLists';\nimport Airtable from 'airtable';\nimport { getResults } from '../lib/db';\nexport default class meta extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: 'hello',\n      records: [],\n      raw: ''\n    };\n  }\n\n  componentDidMount() {\n    Airtable.configure({\n      endpointUrl: 'https://api.airtable.com',\n      apiKey: 'keyBj1QK7piMXmdoF'\n    });\n    const base = Airtable.base('appXfwNirfyLrYXkv');\n    let acc = [];\n    base('Decks').select({\n      // Selecting the first 3 records in Grid view:\n      maxRecords: 5,\n      view: 'Grid view'\n    }).firstPage((err, records) => {\n      if (err) {\n        console.error(err);\n        return;\n      }\n\n      records.forEach(record => {\n        console.log(record);\n        const {\n          DeckURL\n        } = record.fields; //   debugger;\n\n        acc.push(DeckURL);\n        this.setState({\n          raw: records\n        });\n      });\n      this.setState({\n        records: acc\n      });\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"jsx-3682392007\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(TheHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"jsx-3682392007\" + \" \" + 'section',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"jsx-3682392007\" + \" \" + 'columns',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"jsx-3682392007\" + \" \" + 'column is-8 is-offset-2',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(DeckLists, {\n      decks: this.state.raw,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })))), __jsx(_JSXStyle, {\n      id: \"3682392007\",\n      __self: this\n    }, \".title.jsx-3682392007,.subtitle.jsx-3682392007{color:black;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWFuL2dpdGh1Yi9rZXlmb3JnZUNhZmUvcGFnZXMvbWV0YS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwRG9CLEFBSXlCLFlBQ2QiLCJmaWxlIjoiL1VzZXJzL2RlYW4vZ2l0aHViL2tleWZvcmdlQ2FmZS9wYWdlcy9tZXRhLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFRoZUhlYWQgZnJvbSAnLi4vY29tcG9uZW50cy9UaGVIZWFkJ1xuaW1wb3J0IERlY2tMaXN0cyBmcm9tICcuLi9jb21wb25lbnRzL0RlY2tMaXN0cydcbmltcG9ydCBBaXJ0YWJsZSBmcm9tICdhaXJ0YWJsZSdcbmltcG9ydCB7IGdldFJlc3VsdHMgfSBmcm9tICcuLi9saWIvZGInXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIG1ldGEgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3RvciAocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcylcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgdGV4dDogJ2hlbGxvJyxcbiAgICAgIHJlY29yZHM6IFtdLFxuICAgICAgcmF3OiAnJ1xuICAgIH1cbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50ICgpIHtcbiAgICBBaXJ0YWJsZS5jb25maWd1cmUoe1xuICAgICAgZW5kcG9pbnRVcmw6ICdodHRwczovL2FwaS5haXJ0YWJsZS5jb20nLFxuICAgICAgYXBpS2V5OiAna2V5QmoxUUs3cGlNWG1kb0YnXG4gICAgfSlcblxuICAgIGNvbnN0IGJhc2UgPSBBaXJ0YWJsZS5iYXNlKCdhcHBYZndOaXJmeUxyWVhrdicpXG4gICAgbGV0IGFjYyA9IFtdXG5cbiAgICBiYXNlKCdEZWNrcycpXG4gICAgICAuc2VsZWN0KHtcbiAgICAgICAgLy8gU2VsZWN0aW5nIHRoZSBmaXJzdCAzIHJlY29yZHMgaW4gR3JpZCB2aWV3OlxuICAgICAgICBtYXhSZWNvcmRzOiA1LFxuICAgICAgICB2aWV3OiAnR3JpZCB2aWV3J1xuICAgICAgfSlcbiAgICAgIC5maXJzdFBhZ2UoKGVyciwgcmVjb3JkcykgPT4ge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpXG4gICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cbiAgICAgICAgcmVjb3Jkcy5mb3JFYWNoKHJlY29yZCA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2cocmVjb3JkKVxuICAgICAgICAgIGNvbnN0IHsgRGVja1VSTCB9ID0gcmVjb3JkLmZpZWxkc1xuICAgICAgICAgIC8vICAgZGVidWdnZXI7XG4gICAgICAgICAgYWNjLnB1c2goRGVja1VSTClcbiAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgcmF3OiByZWNvcmRzIH0pXG4gICAgICAgIH0pXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyByZWNvcmRzOiBhY2MgfSlcbiAgICAgIH0pXG4gIH1cbiAgcmVuZGVyICgpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPFRoZUhlYWQgLz5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J3NlY3Rpb24nPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdjb2x1bW5zJz5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdjb2x1bW4gaXMtOCBpcy1vZmZzZXQtMic+XG4gICAgICAgICAgICAgIDxEZWNrTGlzdHMgZGVja3M9e3RoaXMuc3RhdGUucmF3fSAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAudGl0bGUsXG4gICAgICAgICAgLnN1YnRpdGxlIHtcbiAgICAgICAgICAgIGNvbG9yOiBibGFjaztcbiAgICAgICAgICB9XG4gICAgICAgIGB9PC9zdHlsZT5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufVxuIl19 */\\n/*@ sourceURL=/Users/dean/github/keyforgeCafe/pages/meta.js */\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/dean/github/keyforgeCafe/pages/meta.js"],"names":["React","Component","TheHead","DeckLists","Airtable","getResults","meta","constructor","props","state","text","records","raw","componentDidMount","configure","endpointUrl","apiKey","base","acc","select","maxRecords","view","firstPage","err","console","error","forEach","record","log","DeckURL","fields","push","setState","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,UAAT,QAA2B,WAA3B;AAEA,eAAe,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAC1CM,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,OADK;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,GAAG,EAAE;AAHM,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAI;AACnBT,IAAAA,QAAQ,CAACU,SAAT,CAAmB;AACjBC,MAAAA,WAAW,EAAE,0BADI;AAEjBC,MAAAA,MAAM,EAAE;AAFS,KAAnB;AAKA,UAAMC,IAAI,GAAGb,QAAQ,CAACa,IAAT,CAAc,mBAAd,CAAb;AACA,QAAIC,GAAG,GAAG,EAAV;AAEAD,IAAAA,IAAI,CAAC,OAAD,CAAJ,CACGE,MADH,CACU;AACN;AACAC,MAAAA,UAAU,EAAE,CAFN;AAGNC,MAAAA,IAAI,EAAE;AAHA,KADV,EAMGC,SANH,CAMa,CAACC,GAAD,EAAMZ,OAAN,KAAkB;AAC3B,UAAIY,GAAJ,EAAS;AACPC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA;AACD;;AACDZ,MAAAA,OAAO,CAACe,OAAR,CAAgBC,MAAM,IAAI;AACxBH,QAAAA,OAAO,CAACI,GAAR,CAAYD,MAAZ;AACA,cAAM;AAAEE,UAAAA;AAAF,YAAcF,MAAM,CAACG,MAA3B,CAFwB,CAGxB;;AACAZ,QAAAA,GAAG,CAACa,IAAJ,CAASF,OAAT;AACA,aAAKG,QAAL,CAAc;AAAEpB,UAAAA,GAAG,EAAED;AAAP,SAAd;AACD,OAND;AAOA,WAAKqB,QAAL,CAAc;AAAErB,QAAAA,OAAO,EAAEO;AAAX,OAAd;AACD,KAnBH;AAoBD;;AACDe,EAAAA,MAAM,GAAI;AACR,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA,0CAAe,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA,0CAAe,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA,0CAAe,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWG,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CAFF;AAAA;AAAA;AAAA,gjFADF;AAmBD;;AA5DyC","sourcesContent":["import React, { Component } from 'react'\nimport TheHead from '../components/TheHead'\nimport DeckLists from '../components/DeckLists'\nimport Airtable from 'airtable'\nimport { getResults } from '../lib/db'\n\nexport default class meta extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      text: 'hello',\n      records: [],\n      raw: ''\n    }\n  }\n\n  componentDidMount () {\n    Airtable.configure({\n      endpointUrl: 'https://api.airtable.com',\n      apiKey: 'keyBj1QK7piMXmdoF'\n    })\n\n    const base = Airtable.base('appXfwNirfyLrYXkv')\n    let acc = []\n\n    base('Decks')\n      .select({\n        // Selecting the first 3 records in Grid view:\n        maxRecords: 5,\n        view: 'Grid view'\n      })\n      .firstPage((err, records) => {\n        if (err) {\n          console.error(err)\n          return\n        }\n        records.forEach(record => {\n          console.log(record)\n          const { DeckURL } = record.fields\n          //   debugger;\n          acc.push(DeckURL)\n          this.setState({ raw: records })\n        })\n        this.setState({ records: acc })\n      })\n  }\n  render () {\n    return (\n      <div>\n        <TheHead />\n        <div className='section'>\n          <div className='columns'>\n            <div className='column is-8 is-offset-2'>\n              <DeckLists decks={this.state.raw} />\n            </div>\n          </div>\n        </div>\n\n        <style jsx>{`\n          .title,\n          .subtitle {\n            color: black;\n          }\n        `}</style>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}