{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dean/github/keyforgeCafe/pages/meta.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport TheHead from '../components/TheHead';\nimport DeckLists from '../components/DeckLists';\nimport Airtable from 'airtable';\nimport { getResults } from '../lib/db';\n\nvar meta =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(meta, _Component);\n\n  function meta(props) {\n    var _this;\n\n    _classCallCheck(this, meta);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(meta).call(this, props));\n    _this.state = {\n      text: 'hello',\n      records: [],\n      raw: ''\n    };\n    return _this;\n  }\n\n  _createClass(meta, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Airtable.configure({\n        endpointUrl: 'https://api.airtable.com',\n        apiKey: 'keyBj1QK7piMXmdoF'\n      });\n      var base = Airtable.base('appXfwNirfyLrYXkv');\n      var acc = [];\n      base('Decks').select({\n        // Selecting the first 3 records in Grid view:\n        maxRecords: 5,\n        view: 'Grid view'\n      }).firstPage(function (err, records) {\n        if (err) {\n          console.error(err);\n          return;\n        }\n\n        records.forEach(function (record) {\n          //   console.log(record);\n          var DeckURL = record.fields.DeckURL; //   debugger;\n\n          acc.push(DeckURL);\n\n          _this2.setState({\n            raw: records\n          });\n        });\n\n        _this2.setState({\n          records: acc\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"jsx-3682392007\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, __jsx(TheHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"jsx-3682392007\" + \" \" + \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"jsx-3682392007\" + \" \" + \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"jsx-3682392007\" + \" \" + \"column is-8 is-offset-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, __jsx(DeckLists, {\n        decks: this.state.raw,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })))), __jsx(_JSXStyle, {\n        id: \"3682392007\",\n        __self: this\n      }, \".title.jsx-3682392007,.subtitle.jsx-3682392007{color:black;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWFuL2dpdGh1Yi9rZXlmb3JnZUNhZmUvcGFnZXMvbWV0YS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwRG9CLEFBSXlCLFlBQ2QiLCJmaWxlIjoiL1VzZXJzL2RlYW4vZ2l0aHViL2tleWZvcmdlQ2FmZS9wYWdlcy9tZXRhLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBUaGVIZWFkIGZyb20gJy4uL2NvbXBvbmVudHMvVGhlSGVhZCc7XG5pbXBvcnQgRGVja0xpc3RzIGZyb20gJy4uL2NvbXBvbmVudHMvRGVja0xpc3RzJztcbmltcG9ydCBBaXJ0YWJsZSBmcm9tICdhaXJ0YWJsZSc7XG5pbXBvcnQgeyBnZXRSZXN1bHRzIH0gZnJvbSAnLi4vbGliL2RiJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgbWV0YSBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICB0ZXh0OiAnaGVsbG8nLFxuICAgICAgcmVjb3JkczogW10sXG4gICAgICByYXc6ICcnXG4gICAgfTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIEFpcnRhYmxlLmNvbmZpZ3VyZSh7XG4gICAgICBlbmRwb2ludFVybDogJ2h0dHBzOi8vYXBpLmFpcnRhYmxlLmNvbScsXG4gICAgICBhcGlLZXk6ICdrZXlCajFRSzdwaU1YbWRvRidcbiAgICB9KTtcblxuICAgIGNvbnN0IGJhc2UgPSBBaXJ0YWJsZS5iYXNlKCdhcHBYZndOaXJmeUxyWVhrdicpO1xuICAgIGxldCBhY2MgPSBbXTtcblxuICAgIGJhc2UoJ0RlY2tzJylcbiAgICAgIC5zZWxlY3Qoe1xuICAgICAgICAvLyBTZWxlY3RpbmcgdGhlIGZpcnN0IDMgcmVjb3JkcyBpbiBHcmlkIHZpZXc6XG4gICAgICAgIG1heFJlY29yZHM6IDUsXG4gICAgICAgIHZpZXc6ICdHcmlkIHZpZXcnXG4gICAgICB9KVxuICAgICAgLmZpcnN0UGFnZSgoZXJyLCByZWNvcmRzKSA9PiB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHJlY29yZHMuZm9yRWFjaChyZWNvcmQgPT4ge1xuICAgICAgICAgIC8vICAgY29uc29sZS5sb2cocmVjb3JkKTtcbiAgICAgICAgICBjb25zdCB7IERlY2tVUkwgfSA9IHJlY29yZC5maWVsZHM7XG4gICAgICAgICAgLy8gICBkZWJ1Z2dlcjtcbiAgICAgICAgICBhY2MucHVzaChEZWNrVVJMKTtcbiAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgcmF3OiByZWNvcmRzIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHJlY29yZHM6IGFjYyB9KTtcbiAgICAgIH0pO1xuICB9XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPFRoZUhlYWQgLz5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzZWN0aW9uXCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2x1bW5zXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbHVtbiBpcy04IGlzLW9mZnNldC0yXCI+XG4gICAgICAgICAgICAgIDxEZWNrTGlzdHMgZGVja3M9e3RoaXMuc3RhdGUucmF3fSAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAudGl0bGUsXG4gICAgICAgICAgLnN1YnRpdGxlIHtcbiAgICAgICAgICAgIGNvbG9yOiBibGFjaztcbiAgICAgICAgICB9XG4gICAgICAgIGB9PC9zdHlsZT5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cbiJdfQ== */\\n/*@ sourceURL=/Users/dean/github/keyforgeCafe/pages/meta.js */\"));\n    }\n  }]);\n\n  return meta;\n}(Component);\n\nexport { meta as default };","map":{"version":3,"sources":["/Users/dean/github/keyforgeCafe/pages/meta.js"],"names":["React","Component","TheHead","DeckLists","Airtable","getResults","meta","props","state","text","records","raw","configure","endpointUrl","apiKey","base","acc","select","maxRecords","view","firstPage","err","console","error","forEach","record","DeckURL","fields","push","setState"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,UAAT,QAA2B,WAA3B;;IAEqBC,I;;;;;AACnB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,OADK;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,GAAG,EAAE;AAHM,KAAb;AAFiB;AAOlB;;;;wCAEmB;AAAA;;AAClBP,MAAAA,QAAQ,CAACQ,SAAT,CAAmB;AACjBC,QAAAA,WAAW,EAAE,0BADI;AAEjBC,QAAAA,MAAM,EAAE;AAFS,OAAnB;AAKA,UAAMC,IAAI,GAAGX,QAAQ,CAACW,IAAT,CAAc,mBAAd,CAAb;AACA,UAAIC,GAAG,GAAG,EAAV;AAEAD,MAAAA,IAAI,CAAC,OAAD,CAAJ,CACGE,MADH,CACU;AACN;AACAC,QAAAA,UAAU,EAAE,CAFN;AAGNC,QAAAA,IAAI,EAAE;AAHA,OADV,EAMGC,SANH,CAMa,UAACC,GAAD,EAAMX,OAAN,EAAkB;AAC3B,YAAIW,GAAJ,EAAS;AACPC,UAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA;AACD;;AACDX,QAAAA,OAAO,CAACc,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACxB;AADwB,cAEhBC,OAFgB,GAEJD,MAAM,CAACE,MAFH,CAEhBD,OAFgB,EAGxB;;AACAV,UAAAA,GAAG,CAACY,IAAJ,CAASF,OAAT;;AACA,UAAA,MAAI,CAACG,QAAL,CAAc;AAAElB,YAAAA,GAAG,EAAED;AAAP,WAAd;AACD,SAND;;AAOA,QAAA,MAAI,CAACmB,QAAL,CAAc;AAAEnB,UAAAA,OAAO,EAAEM;AAAX,SAAd;AACD,OAnBH;AAoBD;;;6BACQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA,4CAAe,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA,4CAAe,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA,4CAAe,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWG,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CAFF;AAAA;AAAA;AAAA,0lFADF;AAmBD;;;;EA5D+BV,S;;SAAbK,I","sourcesContent":["import React, { Component } from 'react';\nimport TheHead from '../components/TheHead';\nimport DeckLists from '../components/DeckLists';\nimport Airtable from 'airtable';\nimport { getResults } from '../lib/db';\n\nexport default class meta extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: 'hello',\n      records: [],\n      raw: ''\n    };\n  }\n\n  componentDidMount() {\n    Airtable.configure({\n      endpointUrl: 'https://api.airtable.com',\n      apiKey: 'keyBj1QK7piMXmdoF'\n    });\n\n    const base = Airtable.base('appXfwNirfyLrYXkv');\n    let acc = [];\n\n    base('Decks')\n      .select({\n        // Selecting the first 3 records in Grid view:\n        maxRecords: 5,\n        view: 'Grid view'\n      })\n      .firstPage((err, records) => {\n        if (err) {\n          console.error(err);\n          return;\n        }\n        records.forEach(record => {\n          //   console.log(record);\n          const { DeckURL } = record.fields;\n          //   debugger;\n          acc.push(DeckURL);\n          this.setState({ raw: records });\n        });\n        this.setState({ records: acc });\n      });\n  }\n  render() {\n    return (\n      <div>\n        <TheHead />\n        <div className=\"section\">\n          <div className=\"columns\">\n            <div className=\"column is-8 is-offset-2\">\n              <DeckLists decks={this.state.raw} />\n            </div>\n          </div>\n        </div>\n\n        <style jsx>{`\n          .title,\n          .subtitle {\n            color: black;\n          }\n        `}</style>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}